name: Create pre-release version

on:
  push:
    branches: [ develop ]

jobs:
  pre_release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Node JS
      uses: actions/setup-node@v3
      with:
          node-version: 18

    - name: Install jq
      run: |
        sudo apt-get install jq
        
    - name: Install SFDX CLI
      run: |
          npm install @salesforce/cli --global
          echo sf version
          sf --version
    
    - name: Populate auth file for Dev Hub
      shell: bash
      run: 'echo ${{secrets.AUTHURL_COPADOPROD}} > ./AUTHURL_COPADOPROD.txt'

    - name: Authenticate Dev Hub Org
      run: 'sfdx force:auth:sfdxurl:store -f ./AUTHURL_COPADOPROD.txt -a devhub'
    
    - name: Populate auth file for Dev Int
      shell: bash
      run: 'echo ${{secrets.AUTHURL_COPADOINT}} > ./AUTHURL_COPADOINT.txt'

    - name: Authenticate Dev Int Org
      run: 'sfdx force:auth:sfdxurl:store -f ./AUTHURL_COPADOINT.txt -a devint'

    - name: Create new version
      run: |
        sfdx force:package:version:create -x -p "PackageTest" -w 60 -v devhub -b develop --code-coverage
        new_version_id=$(grep -o "04t[[:alnum:]]\{15\}" sfdx-project.json | tail -n1)
        echo "version_id=${new_version_id}" >> $GITHUB_ENV
    
    - name: Check code coverage
      run: |
        test $(sfdx force:package:version:report -v devhub -p "$version_id" --json | jq .result.HasPassedCodeCoverageCheck) = 'true'
    
    - name: Install new version in Dev Int
      run: |
        sfdx force:package:install -p "$version_id" -u devint --wait 10 --publishwait 10
    
    - name: Store new version id
      run: |
        sed -i -e "s/04t[[:alnum:]]\{15\}/${version_id}/" README.md
        git config user.name "release[bot]"
        git config user.email "<>"
        git add README.md
        git add sfdx-project.json
        git commit -m "Updating new pre-release version"
        git push