name: Publish new release

on:
  push:
    branches: [ main ]

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  publish_release:
    needs: sonarcloud
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Node JS
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install SFDX CLI
      run: |
        npm install @salesforce/cli --global
        echo sf version
        sf --version
    
    - name: Install jq
      run: |
        sudo apt-get install jq
    
    - name: Populate auth file for Dev Hub
      shell: bash
      run: 'echo ${{secrets.AUTHURL_COPADOPROD}} > ./AUTHURL_COPADOPROD.txt'
    
    - name: Authenticate Dev Hub
      run: 'sfdx force:auth:sfdxurl:store -f ./AUTHURL_COPADOPROD.txt -a devhub -d'

    - name: Promote latest version
      run: |
        version_id=$(grep -o "04t[[:alnum:]]\{15\}" sfdx-project.json | tail -n1)
        sfdx force:package:version:promote -v devhub -p "$version_id" --noprompt
    
    - name: Install release version in Dev Hub
      run: |
        sfdx force:package:install -p "$version_id" -u devhub --wait 10 --publishwait 10
    
    - name: Tag new release
      run: |
        tag_name=$(jq ".packageDirectories[0].versionName" sfdx-project.json | tr -d '"'| tr -d ' ')
        pkg_name=$(jq ".packageDirectories[0].package" sfdx-project.json | tr -d '"')
        git config user.name "release[bot]"
        git config user.email "<>"
        git tag -a "$tag_name" -m "$pkg_name $tag_name"
        git push origin "$tag_name"
