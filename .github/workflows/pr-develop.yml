name: Pull Request to Develop

on:
  pull_request:
    branches: [ develop ]

jobs:
  validate_pull_request:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Node JS
      uses: actions/setup-node@v3
      with:
          node-version: 18

    - name: Install SFDX CLI
      run: |
          npm install @salesforce/cli --global
          echo sf version
          sf --version
    
    - name: Install jq
      run: |
        sudo apt-get install jq
    
    - name: Populate auth file
      shell: bash
      run: 'echo ${{secrets.AUTHURL_COPADOPROD}} > ./AUTHURL_COPADOPROD.txt'
    
    - name: Authenticate Dev Hub
      run: 'sfdx force:auth:sfdxurl:store -f ./AUTHURL_COPADOPROD.txt -a devhub -d'

    - name: Create scratch org
      run: 'sfdx force:org:create -f config/project-scratch-def.json -a ci_scratch -s -d 1'
    
    - name: Push source to scratch org / Code Validation
      run: 'sfdx force:source:push'
    
    - name: Check code coverage
      run: |
        sfdx force:apex:test:run --codecoverage -o ci_scratch -d ./apex/tests --resultformat json --synchronous --testlevel RunLocalTests --wait 30
        coverage=$(jq .result.summary.orgWideCoverage test-result-codecoverage.json | grep -Eo "[[:digit:]]+")
        test $coverage -ge 75
        echo "Code Coverage check successfull"

    - name: Make report available
      uses: actions/upload-artifact@v2
      with:
          name: apex-code-coverage
          path: apex/tests/test-result-codecoverage.json
    
    - name: Delete scratch org
      if: always()
      run: 'sfdx force:org:delete -p -u ci_scratch'

  sonar-scan:
    needs: validate_pull_request
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 

      - name: Download coverage result from previous job
        uses: actions/download-artifact@v2
        with:
          name: apex-code-coverage
          path: apex/tests

      - name: Sonar Cloud scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}