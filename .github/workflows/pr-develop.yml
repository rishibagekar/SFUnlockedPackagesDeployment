name: Pull Request to Develop

on:
  pull_request:
    branches: [ develop ]

jobs:
  validate_pull_request:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Install Node JS
      uses: actions/setup-node@v3
      with:
          node-version: 18

    - name: Install SonarQube Scanner
      run: npm install -g sonarqube-scanner

    - name: Install SFDX CLI
      run: |
          npm install @salesforce/cli --global
          echo sf version
          sf --version
    
    - name: Install jq
      run: |
        sudo apt-get install jq
    
    - name: Populate auth file
      shell: bash
      run: 'echo ${{secrets.AUTHURL_COPADOPROD}} > ./AUTHURL_COPADOPROD.txt'
    
    - name: Authenticate Dev Hub
      run: 'sfdx force:auth:sfdxurl:store -f ./AUTHURL_COPADOPROD.txt -a devhub -d'

    - name: Create scratch org
      run: 'sfdx force:org:create -f config/project-scratch-def.json -a ci_scratch -s -d 1'
    
    - name: Push source to scratch org / Code Validation
      run: |
          status = sf project deploy start --dry-run -d cmd-loader/main/default -l RunLocalTests -o ci_scratch --verbose > code-coverage.json
          echo $status
          cat code-coverage.json
          if [ $status -ne 0 ]; then
            exit $status
          fi

    - name: Sonar Cloud scan
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
        SONAR_TOKEN:  ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner
        -Dsonar.projectKey=rishibagekar_sf-unlocked-pakage-deployment
        -Dsonar.organization=rishibagekar
        -Dsonar.sources=cmd-loader
        -Dsonar.host.url=https://sonarcloud.io
        -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Delete scratch org
      if: always()
      run: 'sfdx force:org:delete -p -u ci_scratch'