name: Pull Request to Develop

on:
  pull_request:
    branches: [ develop ]

jobs:
  validate_pull_request:
    runs-on: ubuntu-latest

    container:
        image: salesforce/salesforcedx:latest
        options: --entrypoint ""

    steps:
    - name: Code Checkout
      uses: actions/checkout@v3

    - name: Install jq
      run: |
        sudo apt-get install jq
    
    - name: Populate Dev Hub auth file 
      shell: bash
      run: 'echo ${{secrets.AUTHURL_COPADOPROD}} > ./AUTHURL_COPADOPROD.txt'
    
    - name: Authenticate Dev Hub
      run: 'sfdx force:auth:sfdxurl:store -f ./AUTHURL_COPADOPROD.txt -a devhub -d'

    - name: Create scratch org
      run: 'sfdx force:org:create -f config/project-scratch-def.json -a ci_scratch -s -d 1'

    - name: Push Code to Scratch Org
      run: sfdx force:source:push

    - name: Run Apex Tests
      run: sfdx force:apex:test:run -c -v -r human -u ci_scratch -w 20

    - name: Check Apex Code Coverage
      run: |
        sfdx force:apex:test:run -c -r json -d ./tests/apex -u ci_scratch -w 20 > testcoverage.json
        coverage=$(jq .result.summary.orgWideCoverage testcoverage.json | grep -Eo "[[:digit:]]+")
        echo "Org Wide Code Coverage: $coverage"
        test $coverage -ge 75

    - name: Generating Apex Code Coverage Report
      uses: actions/upload-artifact@v2
      with:
        name: apex-code-coverage
        path: tests/apex/test-result-codecoverage.json

    - name: Delete scratch org
      if: always()
      run: 'sfdx force:org:delete -p -u ci_scratch'

  sonar-scan:
    needs: validate_pull_request
    runs-on: ubuntu-latest
    steps:
      - name: Code Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download Apex Code coverage Report
        uses: actions/download-artifact@v2
        with:
          name: apex-code-coverage
          path: tests/apex

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}